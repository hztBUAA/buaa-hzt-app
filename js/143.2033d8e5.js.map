{"version":3,"file":"js/143.2033d8e5.js","mappings":"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","sources":["webpack://buaa-hzt/../../../src/components/VChip/VChip.tsx","webpack://buaa-hzt/../../../src/components/VChipGroup/VChipGroup.tsx","webpack://buaa-hzt/../../../src/components/VSlideGroup/helpers.ts","webpack://buaa-hzt/../../../src/components/VSlideGroup/VSlideGroup.tsx"],"sourcesContent":["/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: IconValue,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n              [`${props.activeClass}`]: props.activeClass && link.isActive?.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              data-testid=\"close-chip\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n","// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n","export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useGoTo } from '@/composables/goto'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport {\n  calculateCenteredTarget,\n  calculateUpdatedTarget,\n  getClientSize,\n  getOffsetSize,\n  getScrollPosition,\n  getScrollSize,\n} from './helpers'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GoToOptions } from '@/composables/goto'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const goTo = useGoTo()\n    const goToOptions = computed<Partial<GoToOptions>>(() => {\n      return {\n        container: containerRef.el,\n        duration: 200,\n        easing: 'easeOutQuart',\n      }\n    })\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.el) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.el.children[lastSelectedIndex.value] as HTMLElement\n\n            scrollToChildren(selectedElement, props.centerActive)\n          }\n        })\n      })\n    }\n\n    const isFocused = shallowRef(false)\n\n    function scrollToChildren (children: HTMLElement, center?: boolean) {\n      let target = 0\n\n      if (center) {\n        target = calculateCenteredTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          selectedElement: children,\n        })\n      } else {\n        target = calculateUpdatedTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          isRtl: isRtl.value,\n          selectedElement: children,\n        })\n      }\n\n      scrollToPosition(target)\n    }\n\n    function scrollToPosition (newPosition: number) {\n      if (!IN_BROWSER || !containerRef.el) return\n\n      const offsetSize = getOffsetSize(isHorizontal.value, containerRef.el)\n      const scrollPosition = getScrollPosition(isHorizontal.value, isRtl.value, containerRef.el)\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n\n      if (\n        scrollSize <= offsetSize ||\n        // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n        Math.abs(newPosition - scrollPosition) < 16\n      ) return\n\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition = (scrollWidth - containerWidth) - newPosition\n      }\n\n      if (isHorizontal.value) {\n        goTo.horizontal(newPosition, goToOptions.value)\n      } else {\n        goTo(newPosition, goToOptions.value)\n      }\n    }\n\n    function onScroll (e: Event) {\n      const { scrollTop, scrollLeft } = e.target as HTMLElement\n\n      scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.el) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.el.children) {\n          if (item === el) {\n            scrollToChildren(item as HTMLElement)\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren\n    let ignoreFocusEvent = false\n    function onFocus (e: FocusEvent) {\n      if (\n        !ignoreFocusEvent &&\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget as Node))\n      ) focus()\n\n      ignoreFocusEvent = false\n    }\n\n    function onFocusAffixes () {\n      ignoreFocusEvent = true\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.el) return\n\n      function toFocus (location: Parameters<typeof focus>[0]) {\n        e.preventDefault()\n        focus(location)\n      }\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          toFocus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          toFocus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          toFocus('next')\n        } else if (e.key === 'ArrowUp') {\n          toFocus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        toFocus('first')\n      } else if (e.key === 'End') {\n        toFocus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.el) return\n\n      let el: HTMLElement | undefined\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.el)\n        el = focusable[0]\n      } else if (location === 'next') {\n        el = contentRef.el.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('first')\n      } else if (location === 'prev') {\n        el = contentRef.el.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('last')\n      } else if (location === 'first') {\n        el = (contentRef.el.firstElementChild as HTMLElement)\n      } else if (location === 'last') {\n        el = (contentRef.el.lastElementChild as HTMLElement)\n      }\n\n      if (el) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const direction = isHorizontal.value && isRtl.value ? -1 : 1\n\n      const offsetStep = (location === 'prev' ? -direction : direction) * containerSize.value\n\n      let newPosition = scrollOffset.value + offsetStep\n\n      // TODO: improve it\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition += scrollWidth - containerWidth\n      }\n\n      scrollToPosition(newPosition)\n    }\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      // 1 pixel in reserve, may be lost after rounding\n      return Math.abs(scrollOffset.value) > 1\n    })\n\n    const hasNext = computed(() => {\n      if (!containerRef.value) return false\n\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n      const clientSize = getClientSize(isHorizontal.value, containerRef.el)\n\n      const scrollSizeMax = scrollSize - clientSize\n\n      // 1 pixel in reserve, may be lost after rounding\n      return scrollSizeMax - Math.abs(scrollOffset.value) > 1\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n      hasPrev,\n      hasNext,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n"],"names":["makeVChipProps","propsFactory","activeClass","String","appendAvatar","appendIcon","IconValue","closable","Boolean","closeIcon","type","default","closeLabel","draggable","filter","filterIcon","label","link","undefined","pill","prependAvatar","prependIcon","ripple","Object","text","modelValue","onClick","EventProp","onClickOnce","makeBorderProps","makeComponentProps","makeDensityProps","makeElevationProps","makeGroupItemProps","makeRoundedProps","makeRouterProps","makeSizeProps","makeTagProps","tag","makeThemeProps","makeVariantProps","variant","VChip","genericComponent","name","directives","Ripple","props","emits","e","value","val","click","setup","_ref","attrs","emit","slots","t","useLocale","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","densityClasses","useDensity","elevationClasses","useElevation","roundedClasses","useRounded","sizeClasses","useSize","themeClasses","provideTheme","isActive","useProxiedModel","group","useGroupItem","VChipGroupSymbol","useLink","isLink","computed","isClickable","disabled","closeProps","preventDefault","stopPropagation","navigate","toggle","onKeyDown","key","Tag","hasAppendMedia","hasAppend","append","hasClose","close","hasFilter","hasPrependMedia","hasPrepend","prepend","hasColor","isSelected","_withDirectives","_createVNode","_mergeProps","selectedClass","class","style","linkProps","genOverlays","VExpandXTransition","VDefaultsProvider","VIcon","icon","_vShow","VAvatar","image","start","_Fragment","select","end","size","_resolveDirective","Symbol","for","makeVChipGroupProps","column","valueComparator","Function","deepEqual","makeVSlideGroupProps","makeGroupProps","VChipGroup","next","prev","selected","useGroup","provideDefaults","color","toRef","useRender","slideGroupProps","VSlideGroup","filterProps","calculateUpdatedTarget","selectedElement","containerElement","isRtl","isHorizontal","containerSize","getOffsetSize","scrollPosition","getScrollPosition","childrenSize","childrenStartPosition","getOffsetPosition","additionalOffset","calculateCenteredTarget","_ref2","containerOffsetSize","childrenOffsetPosition","childrenOffsetSize","getScrollSize","element","getClientSize","rtl","scrollLeft","offsetWidth","scrollWidth","scrollTop","VSlideGroupSymbol","centerActive","direction","symbol","nextIcon","prevIcon","showArrows","validator","v","includes","makeDisplayProps","mobile","useRtl","displayClasses","useDisplay","isOverflowing","shallowRef","scrollOffset","contentSize","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","goTo","useGoTo","goToOptions","container","el","duration","easing","firstSelectedIndex","length","items","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","watch","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","scrollToChildren","isFocused","center","target","scrollToPosition","newPosition","offsetSize","scrollSize","Math","abs","containerWidth","horizontal","onScroll","onFocusin","composedPath","onFocusout","ignoreFocusEvent","onFocus","relatedTarget","contains","focus","onFocusAffixes","onKeydown","toFocus","location","querySelector","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","focusableChildren","preventScroll","scrollTo","offsetStep","slotProps","hasAffixes","hasPrev","hasNext","clientSize","scrollSizeMax","VFadeTransition"],"sourceRoot":""}