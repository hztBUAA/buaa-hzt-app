{"version":3,"file":"js/928.b1527d29.js","mappings":"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","sources":["webpack://buaa-hzt/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://buaa-hzt/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://buaa-hzt/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://buaa-hzt/../../../src/components/VGrid/VCol.ts","webpack://buaa-hzt/../../../src/components/VGrid/VRow.ts","webpack://buaa-hzt/../../../src/components/VMenu/VMenu.tsx","webpack://buaa-hzt/../../../src/components/VSelect/VSelect.tsx","webpack://buaa-hzt/../../../src/components/VSelect/useScrolling.ts","webpack://buaa-hzt/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://buaa-hzt/../../src/composables/virtual.ts","webpack://buaa-hzt/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://buaa-hzt/../../../src/components/transitions/dialog-transition.tsx"],"sourcesContent":["// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null,\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null,\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n    default: null,\n    validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCol')\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: makeVColProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\ntype BreakpointAlign = `align${Capitalize<Breakpoint>}`\ntype BreakpointJustify = `justify${Capitalize<Breakpoint>}`\ntype BreakpointAlignContent = `alignContent${Capitalize<Breakpoint>}`\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <\n  Name extends BreakpointAlign | BreakpointJustify | BreakpointAlignContent,\n  Type,\n> (prefix: string, def: () => Prop<Type, null>) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val) as Name\n    props[prefixKey] = def()\n    return props\n  }, {} as Record<Name, Prop<Type, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\ntype AlignValue = typeof ALIGN_VALUES[number]\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps<BreakpointAlign, AlignValue>('align', () => ({\n  type: String as PropType<AlignValue>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\ntype JustifyValue = typeof JUSTIFY_VALUES[number]\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps<BreakpointJustify, JustifyValue>('justify', () => ({\n  type: String as PropType<JustifyValue>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\ntype AlignContentValue = typeof ALIGN_CONTENT_VALUES[number]\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps<BreakpointAlignContent, AlignContentValue>('alignContent', () => ({\n  type: String as PropType<AlignContentValue>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String as PropType<typeof ALIGN_VALUES[number]>,\n    default: null,\n    validator: alignValidator,\n  },\n  ...alignProps,\n  justify: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: justifyValidator,\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: alignContentValidator,\n  },\n\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VRow')\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: makeVRowProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        'v-row',\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  IN_BROWSER,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<number>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => {\n      parent?.unregister()\n      document.removeEventListener('focusin', onFocusIn)\n    })\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        if (IN_BROWSER) {\n          document.addEventListener('focusin', onFocusIn, { once: true })\n        }\n      } else {\n        parent?.unregister()\n        if (IN_BROWSER) {\n          document.removeEventListener('focusin', onFocusIn)\n        }\n      }\n    }, { immediate: true })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement) {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n"],"names":["VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","propsFactory","color","String","disabled","type","Boolean","default","defaultsTarget","error","id","inline","falseIcon","IconValue","trueIcon","ripple","Object","multiple","name","readonly","modelValue","valueComparator","Function","deepEqual","makeComponentProps","makeDensityProps","makeThemeProps","makeVSelectionControlGroupProps","genericComponent","props","emits","value","setup","_ref","slots","useProxiedModel","uid","getUid","computed","updateHandlers","Set","provide","forceUpdate","forEach","fn","onForceUpdate","cb","add","onScopeDispose","delete","provideDefaults","toRef","density","Array","isArray","useRender","_createVNode","class","style","undefined","makeVSelectionControlProps","label","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","val","wrapInArray","some","v","set","currentValue","newVal","filter","item","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","icon","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","shallowRef","isFocusVisible","input","ref","isInteractive","onFocus","e","matchesSelector","target","onBlur","onClickLabel","stopPropagation","onInput","nextTick","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_mergeProps","_withDirectives","_Fragment","VIcon","_resolveDirective","VLabel","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","VCheckboxBtn","onChange","controlProps","omit","filterProps","$event","breakpointProps","breakpoints","reduce","Number","offsetProps","offsetKey","capitalize","orderProps","orderKey","propMap","col","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","makeVColProps","cols","alignSelf","validator","str","includes","makeTagProps","VCol","classes","classList","push","hasColClasses","startsWith","h","tag","ALIGNMENT","SPACE","makeRowProps","prefix","def","prefixKey","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","makeVRowProps","dense","noGutters","VRow","makeVMenuProps","submenu","makeVOverlayProps","closeDelay","closeOnContentClick","locationStrategy","location","openDelay","scrim","scrollStrategy","transition","component","VDialogTransition","VMenu","isActive","scopeId","useScopeId","isRtl","useRtl","overlay","parent","VMenuSymbol","openChildren","async","onFocusIn","before","relatedTarget","after","contentEl","globalTop","document","contains","focusable","focusableChildren","focus","onClickOutside","closeParents","onKeydown","key","HTMLTextAreaElement","HTMLInputElement","closest","preventDefault","nextElement","getNextElement","shiftKey","el","tabIndex","activatorEl","onActivatorKeydown","stopImmediatePropagation","focusChild","setTimeout","register","unregister","size","persistent","isClickInsideElement","onBeforeUnmount","removeEventListener","onDeactivated","watch","IN_BROWSER","addEventListener","once","immediate","activatorProps","mergeProps","overlayProps","VOverlay","activator","_len","arguments","length","args","_key","VDefaultsProvider","forwardRefs","ΨopenChildren","makeSelectProps","chips","closableChips","closeText","openText","eager","hideNoData","hideSelected","listProps","menu","menuIcon","menuProps","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","role","makeTransitionProps","VSelect","focused","ue","t","useLocale","vTextFieldRef","vMenuRef","vVirtualScrollRef","_menu","items","transformIn","transformOut","useItems","transformed","counterValue","form","useForm","selectedValues","map","selection","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","s","menuDisabled","isReadonly","isDisabled","computedMenuProps","listRef","listEvents","useScrolling","onClear","onMousedownControl","onListKeydown","checkPrintable","KEYBOARD_LOOKUP_THRESHOLD","now","performance","find","title","index","indexOf","window","requestAnimationFrame","scrollToIndex","select","findIndex","splice","$el","onAfterEnter","calculateVisibleItems","onAfterLeave","onFocusin","onModelUpdate","oldVal","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","VList","VListItem","VVirtualScroll","_ref2","itemRef","itemProps","onClick","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","onChipClose","slotProps","onMousedown","hasSlot","slotContent","ensureValidVNode","VChip","closable","text","_createTextVNode","textFieldRef","isScrolling","scrollTimeout","onListScroll","cancelAnimationFrame","finishScrolling","Promise","resolve","stop","scrollTo","top","scrollHeight","behavior","children","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","makeVVirtualScrollItemProps","renderless","VVirtualScrollItem","height","emit","resizeRef","contentRect","useResizeObserver","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","useVirtual","display","useDisplay","watchEffect","parseFloat","first","last","Math","ceil","parseInt","paddingTop","paddingBottom","containerRef","markerRef","markerOffset","viewportHeight","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","updateOffsets","debounce","start","i","max","unwatch","offsetTop","handleItemResize","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","clear","lastScrollTop","scrollVelocity","lastScrollTime","handleScroll","scrollTime","scrollDeltaT","sign","handleScrollend","raf","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","computedItems","slice","raw","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","vm","getCurrentInstance","dimensionStyles","useDimension","useToggleScope","handleListeners","method","passive","onMounted","getScrollParent","vnode","convertToUnit","makeVDialogTransitionProps","functions","onBeforeEnter","pointerEvents","visibility","onEnter","done","x","y","sx","sy","speed","getDimensions","animation","animate","transform","opacity","duration","easing","deceleratedEasing","getChildren","standardEasing","finished","then","removeProperty","onBeforeLeave","onLeave","acceleratedEasing","Transition","els","querySelector","targetBox","getTargetBox","elBox","nullifyTransforms","originX","originY","getComputedStyle","transformOrigin","split","anchorSide","anchorOffset","getPropertyValue","offsetX","left","width","offsetY","tsx","tsy","maxs","asa","innerWidth","innerHeight"],"sourceRoot":""}