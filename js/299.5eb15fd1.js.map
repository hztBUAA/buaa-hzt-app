{"version":3,"file":"js/299.5eb15fd1.js","mappings":"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","sources":["webpack://buaa-hzt/../../../src/components/VGrid/VCol.ts","webpack://buaa-hzt/../../../src/components/VGrid/VRow.ts","webpack://buaa-hzt/../../src/composables/refs.ts","webpack://buaa-hzt/../../../src/components/VPagination/VPagination.tsx","webpack://buaa-hzt/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://buaa-hzt/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://buaa-hzt/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://buaa-hzt/../../../src/components/VMenu/VMenu.tsx","webpack://buaa-hzt/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://buaa-hzt/../../src/composables/virtual.ts","webpack://buaa-hzt/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://buaa-hzt/../../../src/components/VSelect/useScrolling.ts","webpack://buaa-hzt/../../../src/components/VSelect/VSelect.tsx","webpack://buaa-hzt/../../../src/components/transitions/dialog-transition.tsx"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null,\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null,\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n    default: null,\n    validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCol')\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: makeVColProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\ntype BreakpointAlign = `align${Capitalize<Breakpoint>}`\ntype BreakpointJustify = `justify${Capitalize<Breakpoint>}`\ntype BreakpointAlignContent = `alignContent${Capitalize<Breakpoint>}`\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <\n  Name extends BreakpointAlign | BreakpointJustify | BreakpointAlignContent,\n  Type,\n> (prefix: string, def: () => Prop<Type, null>) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val) as Name\n    props[prefixKey] = def()\n    return props\n  }, {} as Record<Name, Prop<Type, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\ntype AlignValue = typeof ALIGN_VALUES[number]\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps<BreakpointAlign, AlignValue>('align', () => ({\n  type: String as PropType<AlignValue>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\ntype JustifyValue = typeof JUSTIFY_VALUES[number]\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps<BreakpointJustify, JustifyValue>('justify', () => ({\n  type: String as PropType<JustifyValue>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\ntype AlignContentValue = typeof ALIGN_CONTENT_VALUES[number]\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps<BreakpointAlignContent, AlignContentValue>('alignContent', () => ({\n  type: String as PropType<AlignContentValue>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String as PropType<typeof ALIGN_VALUES[number]>,\n    default: null,\n    validator: alignValidator,\n  },\n  ...alignProps,\n  justify: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: justifyValidator,\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: alignContentValidator,\n  },\n\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VRow')\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: makeVRowProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        'v-row',\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n","// Utilities\nimport { onBeforeUpdate, ref } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useRefs <T extends {}> () {\n  const refs = ref<(T | undefined)[]>([]) as Ref<(T | undefined)[]>\n\n  onBeforeUpdate(() => (refs.value = []))\n\n  function updateRef (e: any, i: number) {\n    refs.value[i] = e\n  }\n\n  return { refs, updateRef }\n}\n","// Styles\nimport './VPagination.sass'\n\n// Components\nimport { VBtn } from '../VBtn'\n\n// Composables\nimport { useDisplay } from '@/composables'\nimport { makeBorderProps } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { makeElevationProps } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale, useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRefs } from '@/composables/refs'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeRoundedProps } from '@/composables/rounded'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { computed, nextTick, shallowRef, toRef } from 'vue'\nimport { createRange, genericComponent, keyValues, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComponentPublicInstance } from 'vue'\n\ntype ItemSlot = {\n  isActive: boolean\n  key: string | number\n  page: string\n  props: Record<string, any>\n}\n\ntype ControlSlot = {\n  icon: IconValue\n  onClick: (e: Event) => void\n  disabled: boolean\n  'aria-label': string\n  'aria-disabled': boolean\n}\n\nexport type VPaginationSlots = {\n  item: ItemSlot\n  first: ControlSlot\n  prev: ControlSlot\n  next: ControlSlot\n  last: ControlSlot\n}\n\nexport const makeVPaginationProps = propsFactory({\n  activeColor: String,\n  start: {\n    type: [Number, String],\n    default: 1,\n  },\n  modelValue: {\n    type: Number,\n    default: (props: any) => props.start as number,\n  },\n  disabled: Boolean,\n  length: {\n    type: [Number, String],\n    default: 1,\n    validator: (val: number) => val % 1 === 0,\n  },\n  totalVisible: [Number, String],\n  firstIcon: {\n    type: IconValue,\n    default: '$first',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  lastIcon: {\n    type: IconValue,\n    default: '$last',\n  },\n  ariaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.root',\n  },\n  pageAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.page',\n  },\n  currentPageAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.currentPage',\n  },\n  firstAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.first',\n  },\n  previousAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.previous',\n  },\n  nextAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.next',\n  },\n  lastAriaLabel: {\n    type: String,\n    default: '$vuetify.pagination.ariaLabel.last',\n  },\n  ellipsis: {\n    type: String,\n    default: '...',\n  },\n  showFirstLastPage: Boolean,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'nav' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VPagination')\n\nexport const VPagination = genericComponent<VPaginationSlots>()({\n  name: 'VPagination',\n\n  props: makeVPaginationProps(),\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n    first: (value: number) => true,\n    prev: (value: number) => true,\n    next: (value: number) => true,\n    last: (value: number) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const page = useProxiedModel(props, 'modelValue')\n    const { t, n } = useLocale()\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { width } = useDisplay()\n    const maxButtons = shallowRef(-1)\n\n    provideDefaults(undefined, { scoped: true })\n\n    const { resizeRef } = useResizeObserver((entries: ResizeObserverEntry[]) => {\n      if (!entries.length) return\n\n      const { target, contentRect } = entries[0]\n\n      const firstItem = target.querySelector('.v-pagination__list > *') as HTMLElement\n\n      if (!firstItem) return\n\n      const totalWidth = contentRect.width\n      const itemWidth =\n        firstItem.offsetWidth +\n        parseFloat(getComputedStyle(firstItem).marginRight) * 2\n\n      maxButtons.value = getMax(totalWidth, itemWidth)\n    })\n\n    const length = computed(() => parseInt(props.length, 10))\n    const start = computed(() => parseInt(props.start, 10))\n\n    const totalVisible = computed(() => {\n      if (props.totalVisible != null) return parseInt(props.totalVisible, 10)\n      else if (maxButtons.value >= 0) return maxButtons.value\n      return getMax(width.value, 58)\n    })\n\n    function getMax (totalWidth: number, itemWidth: number) {\n      const minButtons = props.showFirstLastPage ? 5 : 3\n      return Math.max(0, Math.floor(\n        // Round to two decimal places to avoid floating point errors\n        +((totalWidth - itemWidth * minButtons) / itemWidth).toFixed(2)\n      ))\n    }\n\n    const range = computed(() => {\n      if (length.value <= 0 || isNaN(length.value) || length.value > Number.MAX_SAFE_INTEGER) return []\n\n      if (totalVisible.value <= 0) return []\n      else if (totalVisible.value === 1) return [page.value]\n\n      if (length.value <= totalVisible.value) {\n        return createRange(length.value, start.value)\n      }\n\n      const even = totalVisible.value % 2 === 0\n      const middle = even ? totalVisible.value / 2 : Math.floor(totalVisible.value / 2)\n      const left = even ? middle : middle + 1\n      const right = length.value - middle\n\n      if (left - page.value >= 0) {\n        return [...createRange(Math.max(1, totalVisible.value - 1), start.value), props.ellipsis, length.value]\n      } else if (page.value - right >= (even ? 1 : 0)) {\n        const rangeLength = totalVisible.value - 1\n        const rangeStart = length.value - rangeLength + start.value\n        return [start.value, props.ellipsis, ...createRange(rangeLength, rangeStart)]\n      } else {\n        const rangeLength = Math.max(1, totalVisible.value - 3)\n        const rangeStart = rangeLength === 1 ? page.value : page.value - Math.ceil(rangeLength / 2) + start.value\n        return [start.value, props.ellipsis, ...createRange(rangeLength, rangeStart), props.ellipsis, length.value]\n      }\n    })\n\n    // TODO: 'first' | 'prev' | 'next' | 'last' does not work here?\n    function setValue (e: Event, value: number, event?: any) {\n      e.preventDefault()\n      page.value = value\n      event && emit(event, value)\n    }\n\n    const { refs, updateRef } = useRefs<ComponentPublicInstance>()\n\n    provideDefaults({\n      VPaginationBtn: {\n        color: toRef(props, 'color'),\n        border: toRef(props, 'border'),\n        density: toRef(props, 'density'),\n        size: toRef(props, 'size'),\n        variant: toRef(props, 'variant'),\n        rounded: toRef(props, 'rounded'),\n        elevation: toRef(props, 'elevation'),\n      },\n    })\n\n    const items = computed(() => {\n      return range.value.map((item, index) => {\n        const ref = (e: any) => updateRef(e, index)\n\n        if (typeof item === 'string') {\n          return {\n            isActive: false,\n            key: `ellipsis-${index}`,\n            page: item,\n            props: {\n              ref,\n              ellipsis: true,\n              icon: true,\n              disabled: true,\n            },\n          }\n        } else {\n          const isActive = item === page.value\n          return {\n            isActive,\n            key: item,\n            page: n(item),\n            props: {\n              ref,\n              ellipsis: false,\n              icon: true,\n              disabled: !!props.disabled || +props.length < 2,\n              color: isActive ? props.activeColor : props.color,\n              'aria-current': isActive,\n              'aria-label': t(isActive ? props.currentPageAriaLabel : props.pageAriaLabel, item),\n              onClick: (e: Event) => setValue(e, item),\n            },\n          }\n        }\n      })\n    })\n\n    const controls = computed(() => {\n      const prevDisabled = !!props.disabled || page.value <= start.value\n      const nextDisabled = !!props.disabled || page.value >= start.value + length.value - 1\n\n      return {\n        first: props.showFirstLastPage ? {\n          icon: isRtl.value ? props.lastIcon : props.firstIcon,\n          onClick: (e: Event) => setValue(e, start.value, 'first'),\n          disabled: prevDisabled,\n          'aria-label': t(props.firstAriaLabel),\n          'aria-disabled': prevDisabled,\n        } : undefined,\n        prev: {\n          icon: isRtl.value ? props.nextIcon : props.prevIcon,\n          onClick: (e: Event) => setValue(e, page.value - 1, 'prev'),\n          disabled: prevDisabled,\n          'aria-label': t(props.previousAriaLabel),\n          'aria-disabled': prevDisabled,\n        },\n        next: {\n          icon: isRtl.value ? props.prevIcon : props.nextIcon,\n          onClick: (e: Event) => setValue(e, page.value + 1, 'next'),\n          disabled: nextDisabled,\n          'aria-label': t(props.nextAriaLabel),\n          'aria-disabled': nextDisabled,\n        },\n        last: props.showFirstLastPage ? {\n          icon: isRtl.value ? props.firstIcon : props.lastIcon,\n          onClick: (e: Event) => setValue(e, start.value + length.value - 1, 'last'),\n          disabled: nextDisabled,\n          'aria-label': t(props.lastAriaLabel),\n          'aria-disabled': nextDisabled,\n        } : undefined,\n      }\n    })\n\n    function updateFocus () {\n      const currentIndex = page.value - start.value\n      refs.value[currentIndex]?.$el.focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === keyValues.left && !props.disabled && page.value > +props.start) {\n        page.value = page.value - 1\n        nextTick(updateFocus)\n      } else if (e.key === keyValues.right && !props.disabled && page.value < start.value + length.value - 1) {\n        page.value = page.value + 1\n        nextTick(updateFocus)\n      }\n    }\n\n    useRender(() => (\n      <props.tag\n        ref={ resizeRef }\n        class={[\n          'v-pagination',\n          themeClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        role=\"navigation\"\n        aria-label={ t(props.ariaLabel) }\n        onKeydown={ onKeydown }\n        data-test=\"v-pagination-root\"\n      >\n        <ul class=\"v-pagination__list\">\n          { props.showFirstLastPage && (\n            <li key=\"first\" class=\"v-pagination__first\" data-test=\"v-pagination-first\">\n              { slots.first ? slots.first(controls.value.first!) : (\n                <VBtn _as=\"VPaginationBtn\" { ...controls.value.first } />\n              )}\n            </li>\n          )}\n\n          <li key=\"prev\" class=\"v-pagination__prev\" data-test=\"v-pagination-prev\">\n            { slots.prev ? slots.prev(controls.value.prev) : (\n              <VBtn _as=\"VPaginationBtn\" { ...controls.value.prev } />\n            )}\n          </li>\n\n          { items.value.map((item, index) => (\n            <li\n              key={ item.key }\n              class={[\n                'v-pagination__item',\n                {\n                  'v-pagination__item--is-active': item.isActive,\n                },\n              ]}\n              data-test=\"v-pagination-item\"\n            >\n              { slots.item ? slots.item(item) : (\n                <VBtn _as=\"VPaginationBtn\" { ...item.props }>{ item.page }</VBtn>\n              )}\n            </li>\n          ))}\n\n          <li\n            key=\"next\"\n            class=\"v-pagination__next\"\n            data-test=\"v-pagination-next\"\n          >\n            { slots.next ? slots.next(controls.value.next) : (\n              <VBtn _as=\"VPaginationBtn\" { ...controls.value.next } />\n            )}\n          </li>\n\n          { props.showFirstLastPage && (\n            <li\n              key=\"last\"\n              class=\"v-pagination__last\"\n              data-test=\"v-pagination-last\"\n            >\n              { slots.last ? slots.last(controls.value.last!) : (\n                <VBtn _as=\"VPaginationBtn\" { ...controls.value.last } />\n              )}\n            </li>\n          )}\n        </ul>\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VPagination = InstanceType<typeof VPagination>\n","// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  IN_BROWSER,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<number>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => {\n      parent?.unregister()\n      document.removeEventListener('focusin', onFocusIn)\n    })\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        if (IN_BROWSER) {\n          document.addEventListener('focusin', onFocusIn, { once: true })\n        }\n      } else {\n        parent?.unregister()\n        if (IN_BROWSER) {\n          document.removeEventListener('focusin', onFocusIn)\n        }\n      }\n    }, { immediate: true })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement) {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n"],"names":["breakpointProps","breakpoints","reduce","props","val","type","Boolean","String","Number","default","offsetProps","offsetKey","capitalize","orderProps","orderKey","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","makeVColProps","propsFactory","cols","alignSelf","validator","str","includes","makeComponentProps","makeTagProps","VCol","genericComponent","name","setup","_ref","slots","classes","computed","classList","forEach","value","push","hasColClasses","some","startsWith","h","tag","class","style","ALIGNMENT","SPACE","makeRowProps","prefix","def","prefixKey","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","makeVRowProps","dense","noGutters","VRow","useRefs","refs","ref","updateRef","e","i","onBeforeUpdate","makeVPaginationProps","activeColor","start","modelValue","disabled","length","totalVisible","firstIcon","IconValue","prevIcon","nextIcon","lastIcon","ariaLabel","pageAriaLabel","currentPageAriaLabel","firstAriaLabel","previousAriaLabel","nextAriaLabel","lastAriaLabel","ellipsis","showFirstLastPage","makeBorderProps","makeDensityProps","makeElevationProps","makeRoundedProps","makeSizeProps","makeThemeProps","makeVariantProps","variant","VPagination","emits","first","prev","next","last","emit","page","useProxiedModel","t","n","useLocale","isRtl","useRtl","themeClasses","provideTheme","width","useDisplay","maxButtons","shallowRef","provideDefaults","undefined","scoped","resizeRef","useResizeObserver","entries","target","contentRect","firstItem","querySelector","totalWidth","itemWidth","offsetWidth","parseFloat","getComputedStyle","marginRight","getMax","parseInt","minButtons","Math","max","floor","toFixed","range","isNaN","MAX_SAFE_INTEGER","createRange","even","middle","left","right","rangeLength","rangeStart","ceil","setValue","event","preventDefault","VPaginationBtn","color","toRef","border","density","size","rounded","elevation","items","map","item","index","isActive","key","icon","onClick","controls","prevDisabled","nextDisabled","updateFocus","currentIndex","$el","focus","onKeydown","keyValues","nextTick","useRender","_createVNode","VBtn","_mergeProps","VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","defaultsTarget","error","id","inline","falseIcon","trueIcon","ripple","multiple","readonly","valueComparator","Function","deepEqual","makeVSelectionControlGroupProps","uid","getUid","updateHandlers","Set","provide","forceUpdate","fn","onForceUpdate","cb","add","onScopeDispose","delete","Array","isArray","makeVSelectionControlProps","label","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","wrapInArray","v","set","currentValue","newVal","filter","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","isFocusVisible","input","isInteractive","onFocus","matchesSelector","onBlur","onClickLabel","stopPropagation","onInput","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_withDirectives","_Fragment","VIcon","_resolveDirective","VLabel","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","VCheckboxBtn","onChange","controlProps","omit","filterProps","$event","makeVMenuProps","submenu","makeVOverlayProps","closeDelay","closeOnContentClick","locationStrategy","location","openDelay","scrim","scrollStrategy","transition","component","VDialogTransition","VMenu","scopeId","useScopeId","overlay","parent","VMenuSymbol","openChildren","async","onFocusIn","before","relatedTarget","after","contentEl","globalTop","document","contains","focusable","focusableChildren","onClickOutside","closeParents","HTMLTextAreaElement","HTMLInputElement","closest","nextElement","getNextElement","shiftKey","el","tabIndex","activatorEl","onActivatorKeydown","stopImmediatePropagation","focusChild","setTimeout","register","unregister","persistent","isClickInsideElement","onBeforeUnmount","removeEventListener","onDeactivated","watch","IN_BROWSER","addEventListener","once","immediate","activatorProps","mergeProps","overlayProps","VOverlay","activator","_len","arguments","args","_key","VDefaultsProvider","forwardRefs","ΨopenChildren","makeVVirtualScrollItemProps","renderless","VVirtualScrollItem","height","itemRef","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","useVirtual","display","watchEffect","paddingTop","paddingBottom","containerRef","markerRef","markerOffset","viewportHeight","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","updateOffsets","debounce","performance","now","unwatch","offsetTop","calculateVisibleItems","window","requestAnimationFrame","scrollToIndex","handleItemResize","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","clear","lastScrollTop","scrollVelocity","lastScrollTime","handleScroll","scrollTime","scrollDeltaT","sign","handleScrollend","oldVal","raf","cancelAnimationFrame","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","computedItems","slice","raw","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","VVirtualScroll","vm","getCurrentInstance","dimensionStyles","useDimension","useToggleScope","handleListeners","method","passive","onMounted","getScrollParent","vnode","children","slotProps","convertToUnit","useScrolling","listRef","textFieldRef","isScrolling","scrollTimeout","onListScroll","finishScrolling","Promise","resolve","stop","onListKeydown","scrollTo","top","scrollHeight","behavior","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","makeSelectProps","chips","closableChips","closeText","openText","eager","hideNoData","hideSelected","listProps","menu","menuIcon","menuProps","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","role","makeTransitionProps","VSelect","focused","ue","vTextFieldRef","vMenuRef","vVirtualScrollRef","_menu","transformIn","transformOut","useItems","transformed","counterValue","form","useForm","selectedValues","selection","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","s","menuDisabled","isReadonly","isDisabled","computedMenuProps","listEvents","onClear","onMousedownControl","checkPrintable","KEYBOARD_LOOKUP_THRESHOLD","find","title","indexOf","select","findIndex","splice","onAfterEnter","onAfterLeave","onFocusin","onModelUpdate","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","VList","VListItem","_ref2","itemProps","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","onChipClose","onMousedown","hasSlot","slotContent","ensureValidVNode","VChip","closable","text","_createTextVNode","makeVDialogTransitionProps","functions","onBeforeEnter","pointerEvents","visibility","onEnter","done","x","y","sx","sy","speed","getDimensions","animation","animate","transform","opacity","duration","easing","deceleratedEasing","getChildren","standardEasing","finished","then","removeProperty","onBeforeLeave","onLeave","acceleratedEasing","Transition","els","targetBox","getTargetBox","elBox","nullifyTransforms","originX","originY","transformOrigin","split","anchorSide","anchorOffset","getPropertyValue","offsetX","offsetY","tsx","tsy","maxs","asa","innerWidth","innerHeight"],"sourceRoot":""}