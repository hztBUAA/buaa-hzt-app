{"version":3,"file":"js/381.b53ca212.js","mappings":"yQAmBO,MAAMA,GAAgBC,EAAAA,EAAAA,GAAa,CACxCC,MAAOC,QAEPC,YAAaC,OACbC,WAAYH,QAEZI,UAAW,CACTC,KAAMH,OACNI,QAAS,kBAGRC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,GAAc,CACpBC,cAAe,kBACfC,QAAS,SACP,CACF,SACA,QACA,OACA,WACA,WACA,YAED,QAEUC,GAAOC,EAAAA,EAAAA,KAAAA,CAA8B,CAChDC,KAAM,OAENC,MAAOjB,IAEPkB,KAAAA,CAAOD,EAAKE,GAAoB,IAAlB,MAAEC,EAAK,MAAEC,GAAOF,EAC5B,MAAQG,iBAAkBC,EAAoBC,gBAAiBC,IAAsBC,EAAAA,EAAAA,IAAaT,EAAO,eAEnGU,GAASC,EAAAA,EAAAA,MACTC,GAAWD,EAAAA,EAAAA,MAEXE,GAAeC,EAAAA,EAAAA,KAAS,IAA0B,eAApBd,EAAMV,YACpCyB,GAAaD,EAAAA,EAAAA,KAAS,IAAMJ,EAAOM,OAAOC,OAAOF,WAAWC,QAAS,IAE3E,SAASE,EAAYC,GAAiC,IAA/B,MAAEH,GAA2BG,EAClD,GAAIH,EAAO,CACT,MAAMI,EAAkCV,EAAOM,OAAOK,IAAIC,eAAeC,cAAc,mCACjFC,EAASZ,EAASI,MAExB,IAAKI,IAAWI,EAAQ,OAExB,MAAMC,EAAQC,iBAAiBN,GAAQK,MAEjCE,EAAUP,EAAOQ,wBACjBC,EAAUL,EAAOI,wBAEjBE,EAAKjB,EAAaG,MAAQ,IAAM,IAChCe,EAAKlB,EAAaG,MAAQ,IAAM,IAChCgB,EAAcnB,EAAaG,MAAQ,QAAU,SAC7CiB,EAAcpB,EAAaG,MAAQ,QAAU,SAE7CkB,EAAUP,EAAQG,GAClBK,EAAUN,EAAQC,GAClBM,EAAQF,EAAUC,EACpBR,EAAQK,GAAeH,EAAQG,GAC/BL,EAAQG,GAAMD,EAAQC,GACpBO,EACJC,KAAKC,KAAKH,GAAS,EAAKvB,EAAaG,MAAQ,QAAU,SACrDsB,KAAKC,KAAKH,GAAS,EAAKvB,EAAaG,MAAQ,OAAS,MACtD,SACEwB,EAAOF,KAAKG,IAAIL,IAAUE,KAAKC,KAAKH,GAAS,EAAIT,EAAQM,GAAeJ,EAAQI,IAChFS,EAAQF,EAAOF,KAAKK,IAAIhB,EAAQM,GAAcJ,EAAQI,KAAiB,EACvEW,EAAejB,EAAQM,GAAeJ,EAAQI,IAAgB,EAE9DY,EAAQ,KACdC,EAAAA,EAAAA,GAAQtB,EAAQ,CACduB,gBAAiB,CAACtB,EAAO,gBACzBuB,UAAW,CACT,YAAYjB,KAAMK,aAAiBL,KAAMa,KACzC,YAAYb,KAAMK,EAAQS,aAAiBd,MAAOW,EAAQ,GAAKG,EAAQ,KACvE,QAEFI,gBAAiBC,MAAM,GAAGC,KAAKd,IAC9B,CACDe,SAAU,IACVC,OAAQC,EAAAA,IAEZ,CACF,CA+CA,OA7CAC,EAAAA,EAAAA,IAAU,KACR,MAAMC,EAAWC,EAAAA,EAAKC,YAAY1D,GAElC,OAAA2D,EAAAA,EAAAA,IAAAF,EAAAA,GAAAG,EAAAA,EAAAA,IAAA,QAEaC,EAAAA,EAAW,IACdnD,EAAM,MACL,CACL,QACAV,EAAM8D,OACP,MACO9D,EAAM+D,MAAK,SACRhD,EAAWC,MAAQ,GAAK,EAAC,2BAEpB5B,OAAO2B,EAAWC,OAAM,QAC/B,GACJwC,EACApD,EAAK,OACFJ,EAAMf,MAAK,SACRe,EAAMf,MAAQ,SAAM+E,EAAS,mBACrB9C,IAAY,IAG1Bf,EACHX,QAASA,KAAAmE,EAAAA,EAAAA,IAAAM,EAAAA,GAAA,MAEH9D,EAAMX,aAAeQ,EAAMkE,MAE1BlE,EAAMX,aAAUsE,EAAAA,EAAAA,IAAA,WAET/C,EAAQ,MACP,CACL,gBACAN,EAAmBU,OACpB,MACOR,EAAkBQ,OAAK,SAItC,KAMFmD,EAAAA,EAAAA,GAAY,CAAC,EAAGzD,EACzB,G,0OC5GF,SAAS0D,EAAYC,GACnB,OAAKA,EAEEA,EAAMC,KAAIC,IACVC,EAAAA,EAAAA,IAASD,GAEPA,EAFqB,CAAEL,KAAMK,EAAMvD,MAAOuD,KAHhC,EAOrB,CAEO,MAAME,GAAiBzF,EAAAA,EAAAA,GAAa,CACzC0F,UAAW,CACTnF,KAAMH,OACNI,QAAS,SAEXiC,MAAOrC,OACPuF,UAAWzF,QACXmF,MAAO,CACL9E,KAAM2D,MACN1D,QAASA,IAAO,IAElBoF,QAAS1F,QACT2F,QAASzF,OACT0F,KAAM5F,QACN6F,OAAQ,CACNxF,KAAM,CAACyF,OAAQ5F,QACfI,aAASwE,GAEX3E,WAAYH,QACZC,YAAaC,WAEV6F,EAAAA,EAAAA,IAAqB,CACtBC,UAAW,QACXvF,cAAe,6BAEdwF,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,MACF,SAEUC,GAAQvF,EAAAA,EAAAA,KAAAA,CAA+B,CAClDC,KAAM,QAENC,MAAOyE,IAEPa,MAAO,CACL,oBAAsBC,IAAe,GAGvCtF,KAAAA,CAAOD,EAAKE,GAAoB,IAAlB,MAAEE,EAAK,MAAED,GAAOD,EAC5B,MAAMsF,GAAQC,EAAAA,EAAAA,GAAgBzF,EAAO,cAC/BqE,GAAQvD,EAAAA,EAAAA,KAAS,IAAMsD,EAAWpE,EAAMqE,UACxC,eAAEqB,IAAmBC,EAAAA,EAAAA,GAAW3F,IAChC,uBAAE4F,EAAsB,sBAAEC,IAA0BC,EAAAA,EAAAA,KAAmBC,EAAAA,EAAAA,IAAM/F,EAAO,aACpF,QAAEgG,IAAYC,EAAAA,EAAAA,KAiFpB,OA/EAC,EAAAA,EAAAA,IAAgB,CACdrG,KAAM,CACJ4B,OAAOsE,EAAAA,EAAAA,IAAM/F,EAAO,SACpBV,WAAWyG,EAAAA,EAAAA,IAAM/F,EAAO,aACxB4E,SAASmB,EAAAA,EAAAA,IAAM/F,EAAO,WACtBf,OAAO8G,EAAAA,EAAAA,IAAM/F,EAAO,aACpBb,aAAa4G,EAAAA,EAAAA,IAAM/F,EAAO,eAC1BX,YAAY0G,EAAAA,EAAAA,IAAM/F,EAAO,kBAI7BuD,EAAAA,EAAAA,IAAU,KACR,MAAM4C,EAAkBC,EAAAA,GAAY1C,YAAY1D,GAC1CqG,KAAelG,EAAMmG,QAAUtG,EAAMqE,MAAMkC,OAAS,GAE1D,OAAA5C,EAAAA,EAAAA,IAAAM,EAAAA,GAAA,OAAAN,EAAAA,EAAAA,IAAAyC,EAAAA,IAAAxC,EAAAA,EAAAA,IAGWuC,EAAe,YACVX,EAAMxE,MAAK,sBAAAwF,GAAXhB,EAAMxE,MAAKwF,EAAA,MACd,CACL,SACA,WAAWxG,EAAMV,YACjB,sBAAsBU,EAAM0E,YAC5B,CACE,qBAAsB1E,EAAM2E,UAC5B,eAAgB3E,EAAM8E,KACtB,kBAAmB9E,EAAM4E,SAE3Bc,EAAe1E,MACf4E,EAAuB5E,MACvBhB,EAAM8D,OACP,MACM,CACL,CAAE,mBAAmB2C,EAAAA,EAAAA,IAAczG,EAAM+E,SACzCc,EAAsB7E,MACtBhB,EAAM+D,OACP,sBAEQF,EAAAA,GACJmC,EACA5F,GAAK,CAAAZ,QAAAA,IAAA,CAERW,EAAMX,aAAe6E,EAAMrD,MAAMsD,KAAIC,GACrCpE,EAAMuG,MAAM,CAAEnC,WAAOZ,EAAAA,EAAAA,IAAA9D,EAAAA,GAAA+D,EAAAA,EAAAA,IAEZW,EAAI,KACHA,EAAKL,KAAI,MACPK,EAAKvD,QACJ,CACPxB,QAASW,EAAM,OAAOoE,EAAKvD,SAAW,IAAMb,EAAM,OAAOoE,EAAKvD,WAAW,CAAEuD,cAAUP,SAO7FqC,IAAS1C,EAAAA,EAAAA,IAAAgD,EAAAA,GAAA/C,EAAAA,EAAAA,IAAA,YAEG4B,EAAMxE,MAAK,sBAAAwF,GAAXhB,EAAMxE,MAAKwF,EAAA,mBAEhBR,GAAO,CAAAxG,QAAAA,IAAA,CAEV6E,EAAMrD,MAAMsD,KAAIC,GAAQpE,EAAMoE,OAAO,CAAEA,WAAOZ,EAAAA,EAAAA,IAAAiD,EAAAA,EAAA,OAEpCrC,EAAKvD,OACJ,CACPxB,QAASA,IAAMW,EAAM,QAAQoE,EAAKvD,WAAW,CAAEuD,aAKnDpE,EAAMmG,eAEX,IAKA,CAAC,CACV,G,0JCnKK,MAAMO,GAAuB7H,EAAAA,EAAAA,GAAa,KAC5CS,EAAAA,EAAAA,KAAKqH,EAAAA,EAAAA,MAAoB,CAAC,aAAc,WAAY,WAAY,aAAc,QAAS,eACzF,eAEUH,GAAc7G,EAAAA,EAAAA,KAAAA,CAAmB,CAC5CC,KAAM,cAENC,MAAO6G,IAEPvB,MAAO,CACL,oBAAsBC,IAAe,GAGvCtF,KAAAA,CAAOD,EAAKE,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAMe,GAAQ8F,EAAAA,EAAAA,IAAOlD,EAAAA,EAAa,MAC5BmD,GAASvB,EAAAA,EAAAA,GAAgBzF,EAAO,cAEhCwF,GAAQ1E,EAAAA,EAAAA,IAAS,CACrBmG,GAAAA,GAGE,OAAoB,MAAhBD,EAAOhG,OAAkBC,EAItBA,EAAMoD,MAAMrD,MAAMkG,MAAK3C,GAAQtD,EAAMkG,SAASnG,MAAMoG,SAAS7C,EAAK8C,OAAMrG,MAJpCgG,EAAOhG,KAKpD,EACAsG,GAAAA,CAAKC,GACHP,EAAOhG,MAAQuG,CACjB,IAuBF,OApBAhE,EAAAA,EAAAA,IAAU,KACR,MAAMiE,EAAcC,EAAAA,GAAQ/D,YAAY1D,GAExC,OAAA2D,EAAAA,EAAAA,IAAA8D,EAAAA,IAAA7D,EAAAA,EAAAA,IAAA,oBAGS4D,EAAW,YACNhC,EAAMxE,MAAK,sBAAAwF,GAAXhB,EAAMxE,MAAKwF,EAAA,MACd,CACL,gBACAxG,EAAM8D,OACP,MACO9D,EAAM+D,MAAK,WACP,EAAK,OACT,IACE5D,EAAK,IAKd,CAAC,CACV,G,4GC5DK,MAAMuH,GAA2B1I,EAAAA,EAAAA,GAAa,KAChD2I,EAAAA,EAAAA,MACF,mBAEUf,GAAkB9G,EAAAA,EAAAA,KAAAA,CAAmB,CAChDC,KAAM,kBAENC,MAAO0H,IAEPzH,KAAAA,CAAOD,EAAKE,GAAa,IAAX,MAAEC,GAAOD,EAkBrB,OAjBAqD,EAAAA,EAAAA,IAAU,KACR,MAAMqE,EAAkBC,EAAAA,EAAYnE,YAAY1D,GAEhD,OAAA2D,EAAAA,EAAAA,IAAAkE,EAAAA,GAAAjE,EAAAA,EAAAA,IAAA,wBAGSgE,EAAe,OACb,CACL,qBACA5H,EAAM8D,OACP,MACO9D,EAAM+D,QACJ5D,EAAK,IAKd,CAAC,CACV,G,uDC9BK,MAAM0D,EAA0CiE,OAAOC,IAAI,iB,kQC6C3D,MAAMC,EAA6CF,OAAOC,IAAI,oBACxDE,EAAqDH,OAAOC,IAAI,0BAEhEjB,GAAmB9H,EAAAA,EAAAA,GAAa,CAC3CkJ,WAAYhJ,QACZiJ,SAAU,CACR5I,KAAM,CAACL,QAASE,OAAQgJ,SAAUC,QAClC7I,QAAS,SAEX8I,SAAU,CACR/I,KAAM,CAACL,QAASE,OAAQgJ,SAAUC,QAClC7I,QAAS,SAEX+I,QAASrJ,QACTsJ,WAAY,CACVjJ,KAAM,CAACL,QAASE,QAChBqJ,UAAYlD,GAAwB,mBAANA,GAAyB,UAANA,GAEnDmD,MAAO,CACLnJ,KAAM,CAAC8I,OAAQnJ,SACfM,aAASwE,GAEX1E,UAAW,CACTC,KAAMH,OACNI,QAAS,cAGXmJ,WAAY,KACZC,SAAU1J,QACVS,cAAe,CACbJ,KAAMH,OACNI,QAAS,yBAGX0F,UAAW,CACT3F,KAAM,CAACL,QAASE,QAChBI,QAAS,aAGRqJ,EAAAA,EAAAA,SACAzD,EAAAA,EAAAA,SACA0D,EAAAA,EAAAA,OACF,WAEUrB,GAAU3H,EAAAA,EAAAA,KAAAA,CAM0B,CAC/CC,KAAM,UAENgJ,WAAY,CACVC,MAAKA,EAAAA,GAGPhJ,MAAO8G,IAEPxB,MAAO,CACL,oBAAsBtE,IAAe,GAGvCf,KAAAA,CAAOD,EAAKE,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAM,aAAE+I,IAAiBC,EAAAA,EAAAA,IAAalJ,IAChC,MAAEmJ,IAAUC,EAAAA,EAAAA,OACZ,EAAEC,IAAMC,EAAAA,EAAAA,MAERrI,GAAQsI,EAAAA,EAAAA,IAASvJ,EAAOiI,GAExBuB,GAAU7I,EAAAA,EAAAA,MACV8I,GAAe3I,EAAAA,EAAAA,KAAS,IAAMqI,EAAMnI,OAAShB,EAAMuI,QAAUvI,EAAMuI,UACnEmB,GAAaC,EAAAA,EAAAA,KAAW,GACxBC,GAAa9I,EAAAA,EAAAA,KAAS,KAC1B,MAAM+I,EAA2B,aAApB7J,EAAMV,UAA2B,IAAM,IAC9CiJ,EAAUkB,EAAazI,OAAS0I,EAAW1I,MAAQ0I,EAAW1I,MAC9D1B,EAAYiJ,EAAU,WAAa,GAEzC,MAAO,YAAYsB,IAAOvK,cAAsB,IAE5CwK,GAAkBH,EAAAA,EAAAA,IAAW,GAC7BI,GAAmBpJ,EAAAA,EAAAA,SAAwBqD,GAE3CgG,GAAclJ,EAAAA,EAAAA,KAAS,IACpBG,EAAMoD,MAAMrD,MAAMiJ,WAAU1F,GAAQtD,EAAMkG,SAASnG,MAAMoG,SAAS7C,EAAK8C,SAGhF6C,EAAAA,EAAAA,IAAMF,GAAa,CAACG,EAAQC,KAC1B,MAAMC,EAAcpJ,EAAMoD,MAAMrD,MAAMuF,OAChC+D,EAAYD,EAAc,EAG9BX,EAAW1I,MADTqJ,GAAe,EACEF,EAASC,EACnBD,IAAWG,GAAwB,IAAXF,IAEb,IAAXD,GAAgBC,IAAWE,IAGjBH,EAASC,CAC9B,KAGFG,EAAAA,EAAAA,IAAQvC,EAAe,CACrB4B,aACAF,aACAI,kBACAC,mBACAP,YAGF,MAAMgB,GAAc1J,EAAAA,EAAAA,KAAS,IAAMd,EAAMkI,YAAoC,IAAtB8B,EAAYhJ,QAC7DyJ,GAAiB3J,EAAAA,EAAAA,KAAS,IAAMd,EAAMkI,YAAc8B,EAAYhJ,QAAUC,EAAMoD,MAAMrD,MAAMuF,OAAS,IAE3G,SAASmE,IACPF,EAAYxJ,OAASC,EAAMyJ,MAC7B,CAEA,SAASC,IACPF,EAAezJ,OAASC,EAAM0J,MAChC,CAEA,MAAMC,GAAS9J,EAAAA,EAAAA,KAAS,KACtB,MAAM8J,EAAS,GAETC,EAAY,CAChBC,KAAM3B,EAAMnI,MAAQhB,EAAMmI,SAAWnI,EAAMsI,SAC3CxE,MAAO,cAAa2F,EAAazI,MAAQ,QAAU,QACnD+J,QAAS9J,EAAMyJ,KACf,aAAcrB,EAAE,2BAGlBuB,EAAOI,KAAKR,EAAYxJ,MACpBb,EAAMuK,KACJvK,EAAMuK,KAAK,CAAE1K,MAAO6K,KAAYlH,EAAAA,EAAAA,IAAAF,EAAAA,EACrBoH,EAAS,OAAKlH,EAAAA,EAAAA,IAAA,kBAI/B,MAAMsH,EAAY,CAChBH,KAAM3B,EAAMnI,MAAQhB,EAAMsI,SAAWtI,EAAMmI,SAC3CrE,MAAO,cAAa2F,EAAazI,MAAQ,OAAS,SAClD+J,QAAS9J,EAAM0J,KACf,aAActB,EAAE,2BAUlB,OAPAuB,EAAOI,KAAKP,EAAezJ,MACvBb,EAAMwK,KACJxK,EAAMwK,KAAK,CAAE3K,MAAOiL,KAAYtH,EAAAA,EAAAA,IAAAF,EAAAA,EACrBwH,EAAS,OAAKtH,EAAAA,EAAAA,IAAA,kBAIxBiH,CAAM,IAGTM,GAAepK,EAAAA,EAAAA,KAAS,KAC5B,IAAoB,IAAhBd,EAAM0I,MAAiB,OAAO1I,EAAM0I,MAExC,MAAMyC,EAAyB,CAC7BC,KAAMA,KACJ3B,EAAazI,MAAQ0J,IAASC,GAAM,EAEtCU,MAAOA,KACL5B,EAAazI,MAAQ2J,IAASD,GAAM,EAEtCY,MAAOnK,IAAuB,IAAtB,cAAEoK,GAAepK,EACvBoK,EAAcC,iBAAiB,GAInC,MAAO,IACFL,MACiB,IAAhBnL,EAAM0I,MAAiB,CAAC,EAAI1I,EAAM0I,MACvC,IAoCH,OAjCAnF,EAAAA,EAAAA,IAAU,KAAAkI,EAAAA,EAAAA,KAAA9H,EAAAA,EAAAA,IAAA3D,EAAA0L,IAAA,KAEAlC,EAAO,MACN,CACL,WACA,CACE,iCAAuD,UAArBxJ,EAAMwI,YAE1CS,EAAajI,MACbhB,EAAM8D,OACP,MACO9D,EAAM+D,OAAK,CAAAvE,QAAAA,IAAA,EAAAmE,EAAAA,EAAAA,IAAA,yCAKV,CACLoB,OAAQgF,EAAiB/I,QAC1B,CAECb,EAAMX,UAAU,CAAEyB,WAEG,IAArBjB,EAAMwI,aAAoB7E,EAAAA,EAAAA,IAAA,oCAEtBiH,EAAO5J,UAKbb,EAAMwL,aAAa,CAAE1K,aAAQ,GAAA2K,EAAAA,EAAAA,IAAA,SAjBrBV,EAAalK,WAqBpB,CACLC,QAEJ,G,4NCpPK,MAAM0G,GAAuB3I,EAAAA,EAAAA,GAAa,CAC/C6M,kBAAmB,CACjBtM,KAAM,CAACL,QAASE,QAChBI,aAASwE,GAEX4F,WAAY,CACVrK,KAAM,CAACL,QAASE,QAChBI,aAASwE,OAGR6E,EAAAA,EAAAA,SACAiD,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,MACF,eAEUlE,GAAc/H,EAAAA,EAAAA,KAAAA,CAAmB,CAC5CC,KAAM,cAENgJ,WAAY,CACVC,MAAKA,EAAAA,GAGPhJ,MAAO2H,IAEPrC,MAAO,CACL,iBAAmBiC,IAA4B,GAGjDtH,KAAAA,CAAOD,EAAKE,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAMoG,GAASS,EAAAA,EAAAA,IAAOiB,EAAAA,IAChBgE,GAAYC,EAAAA,EAAAA,IAAajM,EAAOiI,EAAAA,KAChC,SAAEiE,IAAaC,EAAAA,EAAAA,KAErB,IAAK7F,IAAW0F,EAAW,MAAM,IAAII,MAAM,qDAE3C,MAAMC,GAAkB1C,EAAAA,EAAAA,KAAW,GAC7B2C,GAAgBxL,EAAAA,EAAAA,KAAS,IAAMoL,EAASlL,QAC5CsF,EAAOoD,WAAW1I,OACc,IAA5BhB,EAAM6L,mBACe,IAArB7L,EAAM4J,cAGZ,SAAS2C,IACFF,EAAgBrL,OAAUsF,IAK/B+F,EAAgBrL,OAAQ,EACpBsF,EAAOwD,gBAAgB9I,MAAQ,IACjCsF,EAAOwD,gBAAgB9I,OAAS,EAGK,IAAjCsF,EAAOwD,gBAAgB9I,QACzBsF,EAAOyD,iBAAiB/I,WAAQgD,IAGtC,CAEA,SAASwI,KACHH,EAAgBrL,OAAUsF,IAK9B+F,EAAgBrL,OAAQ,EAEa,IAAjCsF,EAAOwD,gBAAgB9I,QAEzBsF,EAAOyD,iBAAiB/I,OAAQyF,EAAAA,EAAAA,IAAcH,EAAOkD,QAAQxI,OAAOyL,eAGtEnG,EAAOwD,gBAAgB9I,OAAS,EAClC,CAEA,SAAS0L,IACPH,GACF,CAEA,SAASI,EAAmBC,GACrBP,EAAgBrL,QAIrB6L,EAAAA,EAAAA,KAAS,KAEFP,EAActL,OAAUqL,EAAgBrL,OAAUsF,IAKvDA,EAAOyD,iBAAiB/I,OAAQyF,EAAAA,EAAAA,IAAcmG,EAAGH,cAAa,GAElE,CAEA,MAAM7C,GAAa9I,EAAAA,EAAAA,KAAS,KAC1B,MAAMf,EAAOuG,EAAOoD,WAAW1I,MAC3BhB,EAAM6L,kBACN7L,EAAM4J,WAEV,QAAQ0C,EAActL,OAAgB,CACpCjB,KAAsB,kBAATA,EAAoBuG,EAAOsD,WAAW5I,MAAQjB,EAC3D+M,cAAeN,EACfO,aAAcR,EACdS,iBAAkBN,EAClBO,cAAeT,EACfU,aAAcX,EACdY,iBAAkBT,EAClBU,QAAST,EACV,KAGG,WAAEU,IAAeC,EAAAA,EAAAA,GAAQtN,EAAOgM,EAAUjL,YAkBhD,OAhBAwC,EAAAA,EAAAA,IAAU,KAAAI,EAAAA,EAAAA,IAAA4J,EAAAA,EAAA,YACsB3D,EAAW5I,MAAK,UAAekL,EAASlL,OAAK,CAAAxB,QAAAA,IAAA,EAAAiM,EAAAA,EAAAA,KAAA9H,EAAAA,EAAAA,IAAA,aAEhE,CACL,gBACAqI,EAAUrM,cAAcqB,MACxBhB,EAAM8D,OACP,MACO9D,EAAM+D,OAAK,CAGjBsJ,EAAWrM,OAASb,EAAMX,cAAW,EAAAgO,EAAAA,GAF9BxB,EAAUjL,WAAWC,cAO7B,CAAEgL,YACX,G,qFCtGF,MAAMyB,EAAiBC,IACrB,MAAM,YAAEC,EAAW,UAAEC,EAAS,YAAEC,EAAW,UAAEC,GAAcJ,EACrDK,EAAW,GACXC,EAAc,GACpBN,EAAQO,QAAUL,EAAYD,EAC9BD,EAAQQ,QAAUJ,EAAYD,EAE1BvL,KAAKG,IAAIiL,EAAQQ,SAAWH,EAAWzL,KAAKG,IAAIiL,EAAQO,WAC1DP,EAAQtC,MAASwC,EAAYD,EAAcK,GAAgBN,EAAQtC,KAAKsC,GACxEA,EAAQrC,OAAUuC,EAAYD,EAAcK,GAAgBN,EAAQrC,MAAMqC,IAGxEpL,KAAKG,IAAIiL,EAAQO,SAAWF,EAAWzL,KAAKG,IAAIiL,EAAQQ,WAC1DR,EAAQS,IAAOL,EAAYD,EAAcG,GAAgBN,EAAQS,GAAGT,GACpEA,EAAQU,MAASN,EAAYD,EAAcG,GAAgBN,EAAQU,KAAKV,GAC1E,EAGF,SAASW,EAAYC,EAAmBZ,GACtC,MAAMhF,EAAQ4F,EAAMC,eAAe,GACnCb,EAAQC,YAAcjF,EAAM8F,QAC5Bd,EAAQG,YAAcnF,EAAM+F,QAE5Bf,EAAQpC,QAAQ,CAAEC,cAAe+C,KAAUZ,GAC7C,CAEA,SAASgB,EAAUJ,EAAmBZ,GACpC,MAAMhF,EAAQ4F,EAAMC,eAAe,GACnCb,EAAQE,UAAYlF,EAAM8F,QAC1Bd,EAAQI,UAAYpF,EAAM+F,QAE1Bf,EAAQiB,MAAM,CAAEpD,cAAe+C,KAAUZ,IAEzCD,EAAcC,EAChB,CAEA,SAASkB,EAAWN,EAAmBZ,GACrC,MAAMhF,EAAQ4F,EAAMC,eAAe,GACnCb,EAAQmB,WAAanG,EAAM8F,QAC3Bd,EAAQoB,WAAapG,EAAM+F,QAE3Bf,EAAQqB,OAAO,CAAExD,cAAe+C,KAAUZ,GAC5C,CAEA,SAASsB,IAAgE,IAAhDhO,EAAoBiO,UAAA1I,OAAA,QAAAvC,IAAAiL,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/C,MAAMvB,EAAU,CACdC,YAAa,EACbE,YAAa,EACbD,UAAW,EACXE,UAAW,EACXe,WAAY,EACZC,WAAY,EACZb,QAAS,EACTC,QAAS,EACT9C,KAAMpK,EAAMoK,KACZC,MAAOrK,EAAMqK,MACb8C,GAAInN,EAAMmN,GACVC,KAAMpN,EAAMoN,KACZ9C,MAAOtK,EAAMsK,MACbyD,KAAM/N,EAAM+N,KACZJ,IAAK3N,EAAM2N,KAGb,MAAO,CACLN,WAAaa,GAAkBb,EAAWa,EAAGxB,GAC7CgB,SAAWQ,GAAkBR,EAASQ,EAAGxB,GACzCkB,UAAYM,GAAkBN,EAAUM,EAAGxB,GAE/C,CAEA,SAASyB,EAASvC,EAAiBwC,GACjC,MAAMpO,EAAQoO,EAAQpO,MAChBqO,EAASrO,GAAOsO,OAAS1C,EAAGtL,cAAgBsL,EAC5CzB,EAAUnK,GAAOmK,SAAW,CAAEoE,SAAS,GACvCC,EAAMJ,EAAQK,UAAUC,EAAEF,IAEhC,IAAKH,IAAWG,EAAK,OAErB,MAAMG,EAAWX,EAAeI,EAAQpO,OAExCqO,EAAOO,eAAiBP,EAAOO,gBAAkBvH,OAAOwH,OAAO,MAC/DR,EAAOO,eAAgBJ,GAAOG,GAE9BG,EAAAA,EAAAA,IAAKH,GAAUI,SAAQC,IACrBX,EAAOY,iBAAiBD,EAAWL,EAASK,GAAY7E,EAAQ,GAEpE,CAEA,SAAS+E,EAAWtD,EAAiBwC,GACnC,MAAMC,EAASD,EAAQpO,OAAOsO,OAAS1C,EAAGtL,cAAgBsL,EACpD4C,EAAMJ,EAAQK,UAAUC,EAAEF,IAEhC,IAAKH,GAAQO,iBAAmBJ,EAAK,OAErC,MAAMG,EAAWN,EAAOO,eAAeJ,IAEvCM,EAAAA,EAAAA,IAAKH,GAAUI,SAAQC,IACrBX,EAAOc,oBAAoBH,EAAWL,EAASK,GAAW,WAGrDX,EAAOO,eAAeJ,EAC/B,CAEO,MAAMxG,EAAQ,CACnBmG,UACAe,aAGF,K","sources":["webpack://buaa-hzt/../../../src/components/VTabs/VTab.tsx","webpack://buaa-hzt/../../../src/components/VTabs/VTabs.tsx","webpack://buaa-hzt/../../../src/components/VTabs/VTabsWindow.tsx","webpack://buaa-hzt/../../../src/components/VTabs/VTabsWindowItem.tsx","webpack://buaa-hzt/../../../src/components/VTabs/shared.ts","webpack://buaa-hzt/../../../src/components/VWindow/VWindow.tsx","webpack://buaa-hzt/../../../src/components/VWindow/VWindowItem.tsx","webpack://buaa-hzt/../../../src/directives/touch/index.ts"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { makeVBtnProps, VBtn } from '@/components/VBtn/VBtn'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { VTabsSymbol } from './shared'\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VBtnSlots } from '@/components/VBtn/VBtn'\n\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n\n  sliderColor: String,\n  hideSlider: Boolean,\n\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text' as const,\n  }), [\n    'active',\n    'block',\n    'flat',\n    'location',\n    'position',\n    'symbol',\n  ]),\n}, 'VTab')\n\nexport const VTab = genericComponent<VBtnSlots>()({\n  name: 'VTab',\n\n  props: makeVTabProps(),\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false)\n\n    function updateSlider ({ value }: { value: boolean }) {\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            'none',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props)\n\n      return (\n        <VBtn\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n            props.class,\n          ]}\n          style={ props.style }\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          { ...btnProps }\n          { ...attrs }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          onGroup:selected={ updateSlider }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { slots.default?.() ?? props.text }\n\n                { !props.hideSlider && (\n                  <div\n                    ref={ sliderEl }\n                    class={[\n                      'v-tab__slider',\n                      sliderColorClasses.value,\n                    ]}\n                    style={ sliderColorStyles.value }\n                  />\n                )}\n              </>\n            ),\n          }}\n        </VBtn>\n      )\n    })\n\n    return forwardRefs({}, rootEl)\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VTab } from './VTab'\nimport { VTabsWindow } from './VTabsWindow'\nimport { VTabsWindowItem } from './VTabsWindowItem'\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, isObject, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | number | Record<string, any>\n\nexport type VTabsSlot = {\n  item: TabItem\n}\n\nexport type VTabsSlots = {\n  default: never\n  tab: VTabsSlot\n  item: VTabsSlot\n  window: never\n} & {\n  [key: `tab.${string}`]: VTabsSlot\n  [key: `item.${string}`]: VTabsSlot\n}\n\nfunction parseItems (items: readonly TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (!isObject(item)) return { text: item, value: item }\n\n    return item\n  })\n}\n\nexport const makeVTabsProps = propsFactory({\n  alignTabs: {\n    type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n    default: 'start',\n  },\n  color: String,\n  fixedTabs: Boolean,\n  items: {\n    type: Array as PropType<readonly TabItem[]>,\n    default: () => ([]),\n  },\n  stacked: Boolean,\n  bgColor: String,\n  grow: Boolean,\n  height: {\n    type: [Number, String],\n    default: undefined,\n  },\n  hideSlider: Boolean,\n  sliderColor: String,\n\n  ...makeVSlideGroupProps({\n    mandatory: 'force' as const,\n    selectedClass: 'v-tab-item--selected',\n  }),\n  ...makeDensityProps(),\n  ...makeTagProps(),\n}, 'VTabs')\n\nexport const VTabs = genericComponent<VTabsSlots>()({\n  name: 'VTabs',\n\n  props: makeVTabsProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const items = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { scopeId } = useScopeId()\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n      const hasWindow = !!(slots.window || props.items.length > 0)\n\n      return (\n        <>\n          <VSlideGroup\n            { ...slideGroupProps }\n            v-model={ model.value }\n            class={[\n              'v-tabs',\n              `v-tabs--${props.direction}`,\n              `v-tabs--align-tabs-${props.alignTabs}`,\n              {\n                'v-tabs--fixed-tabs': props.fixedTabs,\n                'v-tabs--grow': props.grow,\n                'v-tabs--stacked': props.stacked,\n              },\n              densityClasses.value,\n              backgroundColorClasses.value,\n              props.class,\n            ]}\n            style={[\n              { '--v-tabs-height': convertToUnit(props.height) },\n              backgroundColorStyles.value,\n              props.style,\n            ]}\n            role=\"tablist\"\n            symbol={ VTabsSymbol }\n            { ...scopeId }\n            { ...attrs }\n          >\n            { slots.default?.() ?? items.value.map(item => (\n              slots.tab?.({ item }) ?? (\n                <VTab\n                  { ...item }\n                  key={ item.text }\n                  value={ item.value }\n                  v-slots={{\n                    default: slots[`tab.${item.value}`] ? () => slots[`tab.${item.value}`]?.({ item }) : undefined,\n                  }}\n                />\n              )\n            ))}\n          </VSlideGroup>\n\n          { hasWindow && (\n            <VTabsWindow\n              v-model={ model.value }\n              key=\"tabs-window\"\n              { ...scopeId }\n            >\n              { items.value.map(item => slots.item?.({ item }) ?? (\n                <VTabsWindowItem\n                  value={ item.value }\n                  v-slots={{\n                    default: () => slots[`item.${item.value}`]?.({ item }),\n                  }}\n                />\n              ))}\n\n              { slots.window?.() }\n            </VTabsWindow>\n          )}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","// Components\nimport { makeVWindowProps, VWindow } from '@/components/VWindow/VWindow'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VTabsSymbol } from './shared'\n\nexport const makeVTabsWindowProps = propsFactory({\n  ...omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory']),\n}, 'VTabsWindow')\n\nexport const VTabsWindow = genericComponent()({\n  name: 'VTabsWindow',\n\n  props: makeVTabsWindowProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = inject(VTabsSymbol, null)\n    const _model = useProxiedModel(props, 'modelValue')\n\n    const model = computed({\n      get () {\n        // Always return modelValue if defined\n        // or if not within a VTabs group\n        if (_model.value != null || !group) return _model.value\n\n        // If inside of a VTabs, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value\n      },\n      set (val) {\n        _model.value = val\n      },\n    })\n\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props)\n\n      return (\n        <VWindow\n          _as=\"VTabsWindow\"\n          { ...windowProps }\n          v-model={ model.value }\n          class={[\n            'v-tabs-window',\n            props.class,\n          ]}\n          style={ props.style }\n          mandatory={ false }\n          touch={ false }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabsWindow = InstanceType<typeof VTabsWindow>\n","// Components\nimport { makeVWindowItemProps, VWindowItem } from '@/components/VWindow/VWindowItem'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVTabsWindowItemProps = propsFactory({\n  ...makeVWindowItemProps(),\n}, 'VTabsWindowItem')\n\nexport const VTabsWindowItem = genericComponent()({\n  name: 'VTabsWindowItem',\n\n  props: makeVTabsWindowItemProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const windowItemProps = VWindowItem.filterProps(props)\n\n      return (\n        <VWindowItem\n          _as=\"VTabsWindowItem\"\n          { ...windowItemProps }\n          class={[\n            'v-tabs-window-item',\n            props.class,\n          ]}\n          style={ props.style }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabsWindowItem = InstanceType<typeof VTabsWindowItem>\n","// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n","// Styles\nimport './VWindow.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useGroup } from '@/composables/group'\nimport { useLocale, useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Directives\nimport { Touch } from '@/directives/touch'\n\n// Utilities\nimport { computed, provide, ref, shallowRef, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\nimport type { GroupItemProvide, GroupProvide } from '@/composables/group'\nimport type { IconValue } from '@/composables/icons'\nimport type { TouchHandlers } from '@/directives/touch'\nimport type { GenericProps } from '@/util'\n\nexport type VWindowSlots = {\n  default: { group: GroupProvide }\n  additional: { group: GroupProvide }\n  prev: { props: ControlProps }\n  next: { props: ControlProps }\n}\n\ntype WindowProvide = {\n  transition: ComputedRef<undefined | string>\n  transitionCount: Ref<number>\n  transitionHeight: Ref<undefined | string>\n  isReversed: Ref<boolean>\n  rootRef: Ref<HTMLElement | undefined>\n}\n\ntype ControlProps = {\n  icon: IconValue\n  class: string\n  onClick: () => void\n  'aria-label': string\n}\n\nexport const VWindowSymbol: InjectionKey<WindowProvide> = Symbol.for('vuetify:v-window')\nexport const VWindowGroupSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-window-group')\n\nexport const makeVWindowProps = propsFactory({\n  continuous: Boolean,\n  nextIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$next',\n  },\n  prevIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$prev',\n  },\n  reverse: Boolean,\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n  },\n  touch: {\n    type: [Object, Boolean] as PropType<boolean | TouchHandlers>,\n    default: undefined,\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  modelValue: null,\n  disabled: Boolean,\n  selectedClass: {\n    type: String,\n    default: 'v-window-item--active',\n  },\n  // TODO: mandatory should probably not be exposed but do this for now\n  mandatory: {\n    type: [Boolean, String] as PropType<boolean | 'force'>,\n    default: 'force' as const,\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VWindow')\n\nexport const VWindow = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VWindowSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VWindow',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isRtl } = useRtl()\n    const { t } = useLocale()\n\n    const group = useGroup(props, VWindowGroupSymbol)\n\n    const rootRef = ref()\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse)\n    const isReversed = shallowRef(false)\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x'\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    })\n    const transitionCount = shallowRef(0)\n    const transitionHeight = ref<undefined | string>(undefined)\n\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id))\n    })\n\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false\n      } else {\n        isReversed.value = newVal < oldVal\n      }\n    })\n\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef,\n    })\n\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0)\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1)\n\n    function prev () {\n      canMoveBack.value && group.prev()\n    }\n\n    function next () {\n      canMoveForward.value && group.next()\n    }\n\n    const arrows = computed(() => {\n      const arrows = []\n\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        'aria-label': t('$vuetify.carousel.prev'),\n      }\n\n      arrows.push(canMoveBack.value\n        ? slots.prev\n          ? slots.prev({ props: prevProps })\n          : <VBtn { ...prevProps } />\n        : <div />\n      )\n\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        'aria-label': t('$vuetify.carousel.next'),\n      }\n\n      arrows.push(canMoveForward.value\n        ? slots.next\n          ? slots.next({ props: nextProps })\n          : <VBtn { ...nextProps } />\n        : <div />\n      )\n\n      return arrows\n    })\n\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch\n\n      const options: TouchHandlers = {\n        left: () => {\n          isRtlReverse.value ? prev() : next()\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev()\n        },\n        start: ({ originalEvent }) => {\n          originalEvent.stopPropagation()\n        },\n      }\n\n      return {\n        ...options,\n        ...(props.touch === true ? {} : props.touch),\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ rootRef }\n        class={[\n          'v-window',\n          {\n            'v-window--show-arrows-on-hover': props.showArrows === 'hover',\n          },\n          themeClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        v-touch={ touchOptions.value }\n      >\n        <div\n          class=\"v-window__container\"\n          style={{\n            height: transitionHeight.value,\n          }}\n        >\n          { slots.default?.({ group }) }\n\n          { props.showArrows !== false && (\n            <div class=\"v-window__controls\">\n              { arrows.value }\n            </div>\n          )}\n        </div>\n\n        { slots.additional?.({ group }) }\n      </props.tag>\n    ))\n\n    return {\n      group,\n    }\n  },\n})\n\nexport type VWindow = InstanceType<typeof VWindow>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport Touch from '@/directives/touch'\n\n// Utilities\nimport { computed, inject, nextTick, shallowRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VWindowGroupSymbol, VWindowSymbol } from './VWindow'\n\nexport const makeVWindowItemProps = propsFactory({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n\n  ...makeComponentProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n}, 'VWindowItem')\n\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const window = inject(VWindowSymbol)\n    const groupItem = useGroupItem(props, VWindowGroupSymbol)\n    const { isBooted } = useSsrBoot()\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow')\n\n    const isTransitioning = shallowRef(false)\n    const hasTransition = computed(() => isBooted.value && (\n      window.isReversed.value\n        ? props.reverseTransition !== false\n        : props.transition !== false\n    ))\n\n    function onAfterTransition () {\n      if (!isTransitioning.value || !window) {\n        return\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined\n        }\n      }\n    }\n\n    function onBeforeTransition () {\n      if (isTransitioning.value || !window) {\n        return\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true\n\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight)\n      }\n\n      window.transitionCount.value += 1\n    }\n\n    function onTransitionCancelled () {\n      onAfterTransition() // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition (el: Element) {\n      if (!isTransitioning.value) {\n        return\n      }\n\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight)\n      })\n    }\n\n    const transition = computed(() => {\n      const name = window.isReversed.value\n        ? props.reverseTransition\n        : props.transition\n\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition,\n      }\n    })\n\n    const { hasContent } = useLazy(props, groupItem.isSelected)\n\n    useRender(() => (\n      <MaybeTransition transition={ transition.value } disabled={ !isBooted.value }>\n        <div\n          class={[\n            'v-window-item',\n            groupItem.selectedClass.value,\n            props.class,\n          ]}\n          style={ props.style }\n          v-show={ groupItem.isSelected.value }\n        >\n          { hasContent.value && slots.default?.() }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return { groupItem }\n  },\n})\n\nexport type VWindowItem = InstanceType<typeof VWindowItem>\n","// Utilities\nimport { keys } from '@/util'\n\n// Types\nimport type {\n  DirectiveBinding,\n} from 'vue'\n\nexport interface TouchHandlers {\n  start?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  end?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  move?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  left?: (wrapper: TouchData) => void\n  right?: (wrapper: TouchData) => void\n  up?: (wrapper: TouchData) => void\n  down?: (wrapper: TouchData) => void\n}\n\nexport interface TouchData {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\nexport type TouchWrapper = TouchHandlers & TouchData\n\nexport interface TouchValue extends TouchHandlers {\n  parent?: boolean\n  options?: AddEventListenerOptions\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\nexport interface TouchDirectiveBinding extends Omit<DirectiveBinding, 'value'> {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start?.({ originalEvent: event, ...wrapper })\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end?.({ originalEvent: event, ...wrapper })\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move?.({ originalEvent: event, ...wrapper })\n}\n\nfunction createHandlers (value: TouchHandlers = {}): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const value = binding.value\n  const target = value?.parent ? el.parentElement : el\n  const options = value?.options ?? { passive: true }\n  const uid = binding.instance?.$.uid // TODO: use custom uid generator\n\n  if (!target || !uid) return\n\n  const handlers = createHandlers(binding.value)\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null)\n  target._touchHandlers![uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options)\n  })\n}\n\nfunction unmounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const target = binding.value?.parent ? el.parentElement : el\n  const uid = binding.instance?.$.uid\n\n  if (!target?._touchHandlers || !uid) return\n\n  const handlers = target._touchHandlers[uid]\n\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n\n  delete target._touchHandlers[uid]\n}\n\nexport const Touch = {\n  mounted,\n  unmounted,\n}\n\nexport default Touch\n"],"names":["makeVTabProps","propsFactory","fixed","Boolean","sliderColor","String","hideSlider","direction","type","default","omit","makeVBtnProps","selectedClass","variant","VTab","genericComponent","name","props","setup","_ref","slots","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","useTextColor","rootEl","ref","sliderEl","isHorizontal","computed","isSelected","value","group","updateSlider","_ref2","prevEl","$el","parentElement","querySelector","nextEl","color","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","standardEasing","useRender","btnProps","VBtn","filterProps","_createVNode","_mergeProps","VTabsSymbol","class","style","undefined","_Fragment","text","forwardRefs","parseItems","items","map","item","isObject","makeVTabsProps","alignTabs","fixedTabs","stacked","bgColor","grow","height","Number","makeVSlideGroupProps","mandatory","makeDensityProps","makeTagProps","VTabs","emits","v","model","useProxiedModel","densityClasses","useDensity","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","scopeId","useScopeId","provideDefaults","slideGroupProps","VSlideGroup","hasWindow","window","length","$event","convertToUnit","tab","VTabsWindow","VTabsWindowItem","makeVTabsWindowProps","makeVWindowProps","inject","_model","get","find","selected","includes","id","set","val","windowProps","VWindow","makeVTabsWindowItemProps","makeVWindowItemProps","windowItemProps","VWindowItem","Symbol","for","VWindowSymbol","VWindowGroupSymbol","continuous","nextIcon","Function","Object","prevIcon","reverse","showArrows","validator","touch","modelValue","disabled","makeComponentProps","makeThemeProps","directives","Touch","themeClasses","provideTheme","isRtl","useRtl","t","useLocale","useGroup","rootRef","isRtlReverse","isReversed","shallowRef","transition","axis","transitionCount","transitionHeight","activeIndex","findIndex","watch","newVal","oldVal","itemsLength","lastIndex","provide","canMoveBack","canMoveForward","prev","next","arrows","prevProps","icon","onClick","push","nextProps","touchOptions","options","left","right","start","originalEvent","stopPropagation","_withDirectives","tag","additional","_resolveDirective","reverseTransition","makeGroupItemProps","makeLazyProps","groupItem","useGroupItem","isBooted","useSsrBoot","Error","isTransitioning","hasTransition","onAfterTransition","onBeforeTransition","clientHeight","onTransitionCancelled","onEnterTransition","el","nextTick","onBeforeEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onAfterLeave","onLeaveCancelled","onEnter","hasContent","useLazy","MaybeTransition","_vShow","handleGesture","wrapper","touchstartX","touchendX","touchstartY","touchendY","dirRatio","minDistance","offsetX","offsetY","up","down","touchstart","event","changedTouches","clientX","clientY","touchend","end","touchmove","touchmoveX","touchmoveY","move","createHandlers","arguments","e","mounted","binding","target","parent","passive","uid","instance","$","handlers","_touchHandlers","create","keys","forEach","eventName","addEventListener","unmounted","removeEventListener"],"sourceRoot":""}